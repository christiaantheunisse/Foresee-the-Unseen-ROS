my_ekf_filter_node:
    ros__parameters:
        frequency: 30.0
        sensor_timeout: 0.1 # not sure about this one
        publish_tf: true
        two_d_mode: true  # planar mode
        print_diagnostics: true
        permit_corrected_publication: false # not sure about this one (default = false)
        reset_on_time_jump: true
        map_frame: map               
        odom_frame: odom                 
        base_link_frame: base_link  
        world_frame: odom # !!!!! So it provides the filtered pose of the base_link frame in the odom frame
   
        # Non-holonomic robot example: https://docs.ros.org/en/melodic/api/robot_localization/html/configuring_robot_localization.html
        # https://answers.ros.org/question/405263/prediction-step-and-imu-orientation-have-little-impact-on-robot_localization-position/
        # https://answers.ros.org/question/50870/what-frame-is-sensor_msgsimuorientation-relative-to/
        odom0: /odom
        # Pose (position and orientation) is in the header.frame_id (odom) and Twist (linear and angular velocity) is in the child_frame_id (base_link)
        # odom0_config: [true, true, false,    # x, y, z
        #                false, false, true ,     # roll, pitch, yaw
        #                false, true, false,    # x', y', z'
        #                false, false, false,    # roll', pitch', yaw'
        #                false, false, false]    # x'', y'', z''
        odom0_config: [false, false, false,    # x, y, z
                       false, false, false ,     # roll, pitch, yaw
                       true, true, false,    # x', y', z'
                       false, false, true,    # roll', pitch', yaw'
                       false, false, false]    # x'', y'', z''
        odom0_queue_size: 2
        odom0_differential: false
        # odom0_relative: false
        # odom0_pose_rejection_threshold: 5.0
        # odom0_twist_rejection_threshold: 1.0

        imu0: /imu_data
        imu0_config: [false, false, false,  # x, y, z
                      false, false, true,    # roll, pitch, yaw
                      false, false, false,   # x', y', z'
                      false, false, true,    # roll', pitch', yaw'
                      true, false, false]      # x'', y'', z''

        imu0_nodelay: false
        imu0_differential: false # only relevant for orientation and pose information
        imu0_relative: true  # first orientation is zero-point
        imu0_queue_size: 7
        # imu0_pose_rejection_threshold: 0.8             
        # imu0_twist_rejection_threshold: 0.8                
        # imu0_linear_acceleration_rejection_threshold: 0.8  

        # Add SLAM in seperate ekf instance
        # pose0: /pose
        # pose0_config: [true, true, false,  # x, y, z
        #                false, false, true,    # roll, pitch, yaw
        #                false, false, false,   # x', y', z'
        #                false, false, false,    # roll', pitch', yaw'
        #                false, false, false]      # x'', y'', z''


        # Uncertainty in the prediction step; uncertainty in the update step follows from the sensor messages
        # process_noise_covariance: [999., 999., 999., 999., 999., 999., 999., 999., 999., 999., 999., 999., 999., 999., 999.]
        process_noise_covariance: [0.1, 0.1, 0., 0., 0., 0.1, 0.1, 0., 0., 0., 0., 0.1, 0.1, 0.1, 0.]
        # [x, y, z, roll, pitch, yaw, x', y', z', roll', pitch', yaw', x'', y'', z'']
        # process_noise_covariance: [0.03, 0.03, 0., 0., 0., 0.01, 0.01, 0., 0., 0., 0., 0.01, 0.01, 0.01, 0.01]
        # initial_estimate_covariance: [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]
        initial_estimate_covariance: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
        # initial_estimate_covariance: [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]