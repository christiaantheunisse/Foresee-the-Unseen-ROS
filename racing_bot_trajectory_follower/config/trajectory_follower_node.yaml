/trajectory_follower_node:
  ros__parameters:
    map_frame: map
    planner_frame: planner
    odom_frame: odom

    odom_topic: odom
    trajectory_topic: trajectory
    motor_command_topic: cmd_motor
    trajectory_marker_topic: visualization/trajectory

    do_visualize_trajectory: True
    
    # was 10.0 during the first tests, but bigger might help
    control_frequency: 10.0 # frequency of the motor controls send to the motor [Hz] (double)
    # velocity_PID: [5., 0., 0.5] # velocity control PID constants (double array) # no D needed. Do already set acceleration to control speed.
    velocity_p: 1. # velocity control PID constants (double array) # no D needed. Do already set acceleration to control speed.
    # was 1. during the first tests, but this is way too big
    steering_k: 0.3 # steering control gain (double)

    do_limit_acceleration: True
    max_acceleration: 0.5 # [m/s^2] Can be chosen
    max_velocity: 0.7 # [m/s] This value follows from the hardware specs of the robot. 
    # This node only controls the PWM signal or normalized velocity (range is [0, 1]). Therefore, the max velocity is needed to apply the max_acceleration constraint.
    
    wheel_base_width: 0.145 # wheel base width [m] (double)
    wheel_base_length: 0.1 # wheel base length [m] (double)
    min_corner_radius: 0.25 # minimum corner radius [m]
    # max_steering_angle: 25.0 # max steering angle [deg] (double). Influences the minimum corner radius: r_min = wheel_base_length / tan(max_steering_angle)

